#myCarousel .carousel-indicators>button {
    width: 8px;
    height: 8px;
    border: none !important;
    border-radius: 100%;
}

.carousel-indicators>button:not(.active) {
    background: #ddd !important;
}

.carousel-indicators {
    height: 120px;
}

/*  My request list */
.line7865 {
    height: 1px;
}

.min-w-60 {
    min-width: 68px;
    max-width: 68px;
}

.min-w-85 {
    min-width: 83px;
}

/* End  My request list */
/* The container */
label.container {
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.payment-lines .container {
    transform: translateY(-9px);
}

/* Hide the browser's default radio button */
label.container input {
    opacity: 0;
    cursor: pointer;
}


/* Create a custom radio button */
.checkmark {
    position: absolute;
    top: 0;
    right: 0;
    height: 20px;
    width: 20px;
    background-color: white;
    border: 1px solid var(--bs-success);
    border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container:hover input~.checkmark {
    background-color: var(--bs-light);
}

/* When the radio button is checked, add a blue background */
.container input:checked~.checkmark {
    background-color: white;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the indicator (dot/circle) when checked */
.container input:checked~.checkmark:after {
    display: block;
}

/* Style the indicator (dot/circle) */
.container .checkmark::after {
    top: 2px;
    left: 2px;
    width: 14px;
    height: 14px;
    border-radius: 50%;
    background: var(--bs-success);
}

.line-dashed-success {
    border-top: 2px dashed var(--bs-success);
    height: 2px;
    width: 90%;
    transform: translateY(-9px);
}

.min-w-163 {
    min-width: 160px;

}

.reservation-panel {
    transform: scale(0.9);
}

.progress {
    height: 6px;
    width: 85%;
}

.star4512 {
    top: 15px;
    left: 20px;
}

.star4513 {
    bottom: 15px;
    left: 20px;
}

#offcanvasBottom {
    border-radius: 24px 24px 0 0;
}

.time-select button.bg-light.border-0.active {
    border: 1px solid var(--bs-success) !important;
    color: var(--bs-success) !important;
    background-color: transparent !important;
}

/* The container */
.container-tick {
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.container-tick input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.container-tick .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: #eee;
}

/* On mouse-over, add a grey background color */
.container-tick:hover input~.checkmark {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container-tick input:checked~.checkmark {
    background-color: var(--bs-success);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container-tick input:checked~.checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.container-tick .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

.text-input1 {
    right: 145px;
    top: 7px;
}

.text-input2 {
    right: 74px;
    top: 7px;
}

.text-input3 {
    right: 49px;
    top: 7px;
}

.line-img::after {
    position: absolute;
    content: " ";
    border-right: 1px dashed var(--bs-success);
    left: 10px;
    width: 10px;
    height: 50%;
    bottom: -25px;
}

.line7878::after {
    position: absolute;
    content: " ";
    width: 80%;
    height: 1px;
    background-color: var(--bs-secondary-bg-subtle) !important;
    bottom: 0;
    left: 0;
}

.right-border652::after {
    border-right: 1px dashed var(--bs-success);
    width: 5px;
    position: absolute;
    content: " ";
    right: -12px;
    height: 50%;
    bottom: 20px;
}

.circle-bg-right {
    height: 50px;
    width: 50px;
    bottom: 156px;
    right: -27px;
    border: 1px solid var(--bs-secondary-bg-subtle);
    border-radius: 50%;
    position: relative;

}

.circle-bg-right::after {
    content: " ";
    position: absolute;
    background-color: white;
    height: 60px;
    top: -5px;
    width: 25px;
    right: 0;
}

.circle-bg-left {
    height: 50px;
    width: 50px;
    bottom: 156px;
    left: -27px;
    border: 1px solid var(--bs-secondary-bg-subtle);
    border-radius: 50%;
    position: relative;

}

.circle-bg-left::after {
    content: " ";
    position: absolute;
    background-color: white;
    height: 60px;
    top: -5px;
    width: 25px;
    left: 0;
}

.categories-select button.bg-light.text-dark.active {
    color: var(--bs-success) !important;
    background-color: var(--bs-warning-bg-subtle) !important;
}

.filter-select button.bg-light.text-dark.active {
    color: var(--bs-success) !important;
    background-color: var(--bs-warning-bg-subtle) !important;
}

[toggle-button]{
    position: relative;
    flex-grow: 1;
    transition: all 0.2s;
    background-color: var(--bs-light);
    color: black;
}
[toggle-button] img {
    top: calc(50% - 7.5px);
    position: absolute;
    left: 0;
    transition:all 0.2s;
    opacity: 0;
}

[toggle-button].active {
    background-color: var(--bs-warning-bg-subtle);
    padding-left: 22px !important;
    color: var(--bs-success);
}

[toggle-button].active img {
    left: 8px;
    opacity: 1;
}
.collapsed .up-collapsed{
    transform: rotate(180deg);
    transition: 0.2s;
} 
.select-service-swiper{
--swiper-navigation-sides-offset: -6px;
}
.select-service-swiper .swiper-button-next::after, .select-service-swiper .swiper-button-prev::after{
    transform: scale(0.3);
    color: var(--bs-success);
}
.select-service-swiper .swiper-button-next, .select-service-swiper .swiper-button-prev{
    width: 24px;
    height: 24px;
    border: 1px solid var(--bs-success);
    border-radius: 50%;
    transform: translateY(10px);
}
.noUi-connects{
    --bs-component-active-bg: var(--bs-success);
}
div.noUi-horizontal .noUi-tooltip{
    bottom: unset;
    top: 120%;
}